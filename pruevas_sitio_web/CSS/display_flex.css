body {
	background-color: #F0F0F0;
	font-family: Verdana, Arial, Helvetica;
	color: #990000;
	border: 1px solid black;
	background-color: grey;
	font-size: 15px;
	
	
	max-height: 80vh;
	max-width: 90vw;
	min-height: 90vh;
	
	display: flex;
	flex-direction: column;
	justify-content: space-evenly;  
}

h1{
	text-transform: uppercase;
	font-weight: bold;
	
}


.contenedor{
	background-color: green;
	border: 1px solid black;	
	
	margin: 0 auto;
	width: 90%;
	max-width: 60%;
	min-height: 80%;
	
	
	display:flex;
	flex-direction: row; 
	justify-content: flex-start;
	align-items: stretch; 
	
	flex-wrap:wrap;
	
	
	/*
	direccion en la que se distribuyen los hijos, poner en columna o fila ayuda a ver 
	como se posicionan los elementos en el eje vertical y orizontal
	flex-direction: row;  
	flex-direction: row-reverse; 
	flex-direction: column;      
	flex-direction: column-reverse;
	
	
	posicion de los elementso dentro del eje vertical
	justify-content: flex-start;   
	justify-content: center;       
	justify-content: flex-end;     
	justify-content: space-between;
	justify-content: space-around; 
	justify-content: space-evenly;  
	
	posicion de los elementso dentro del eje horizonal
  align-items: stretch;    
  align-items: flex-start; 
  align-items: center;     
  align-items: flex-end;   
  align-items: baseline;   
  
	para controlar el desbordamiento de contenedores
	flex-wrap: nowrap;
	flex-wrap: wrap;
	las nuevas lineas se agregan arriba
	flex-wrap: wrap-reverse;
	
	
	para que el padding y el border se encuentren dentro del ancho total
	box-sizing: border box;
	
	
	se puede usar para centrar el contenido en un eje (dependiendo en donde se coloque el auto)
	independientemente de como los alla alineado el padre.
	margin: 0 auto
  */
	
	
	
	
}


.item{
	border: 1px solid black;
	background-color: red;
	
	/*margin: 0 auto;*/
	text-align: center;
	width: fit-content;
	height: fit-content;
	flex: 0;
	
	/* crecimiento proporcional al resto de los hijos 
	crece proporcionalmente respecto al resto de los elemtnos contenidos por el padre
	flex:1; 
	flex:2;   
	
	fit-content = tama√±o del contenido puede ser tanto vertical como horizonal
	*/
}


footer {
	margin: 0px auto;
	text-align: center;
}

#descripcion_pagina {
	font-style: italic;
	font-size: 14px;
	color: #333;
}
.autor{
	font-size: 1.3em;
	text-transform: capitalize;
}
.tp_ejer{
	font-weight:bold;
}

